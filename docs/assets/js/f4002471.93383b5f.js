"use strict";(self.webpackChunkmedia_processor_docs=self.webpackChunkmedia_processor_docs||[]).push([[352],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),l=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},m=function(e){var t=l(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=l(r),f=a,u=c["".concat(p,".").concat(f)]||c[f]||d[f]||i;return r?n.createElement(u,s(s({ref:t},m),{},{components:r})):n.createElement(u,s({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[c]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3142:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const i={id:"MediaProcessorBaseConfig",title:"Interface: MediaProcessorBaseConfig",sidebar_label:"MediaProcessorBaseConfig",sidebar_position:0,custom_edit_url:null},s=void 0,o={unversionedId:"api/interfaces/MediaProcessorBaseConfig",id:"api/interfaces/MediaProcessorBaseConfig",title:"Interface: MediaProcessorBaseConfig",description:"MediaProcessorBaseConfig specifies the absolute URL for the path where the mediapipe assets used by the transformers from this library are stored.",source:"@site/docs/api/interfaces/MediaProcessorBaseConfig.md",sourceDirName:"api/interfaces",slug:"/api/interfaces/MediaProcessorBaseConfig",permalink:"/ml-transformers-docs/docs/api/interfaces/MediaProcessorBaseConfig",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"MediaProcessorBaseConfig",title:"Interface: MediaProcessorBaseConfig",sidebar_label:"MediaProcessorBaseConfig",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"HolisticResults",permalink:"/ml-transformers-docs/docs/api/interfaces/HolisticResults"},next:{title:"ObjectronOptions",permalink:"/ml-transformers-docs/docs/api/interfaces/ObjectronOptions"}},p={},l=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Properties",id:"properties",level:2},{value:"transformerType",id:"transformertype",level:3},{value:"mediapipeBaseAssetsUri",id:"mediapipebaseassetsuri",level:3},{value:"wasmAssetUriPath",id:"wasmasseturipath",level:3},{value:"tfliteAssetUriPath",id:"tfliteasseturipath",level:3},{value:"renderingOptions",id:"renderingoptions",level:3}],m={toc:l},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"MediaProcessorBaseConfig specifies the absolute URL for the path where the mediapipe assets used by the transformers from this library are stored.\nVonage hosts static assets of mediapipe that will be used in case this property is not set.\nVonage promises to take care of maintaining all versioning.\n",(0,a.kt)("strong",{parentName:"p"},"WARNING"),". By using this option the developer takes responsibility of the assets and their versioning.\n",(0,a.kt)("em",{parentName:"p"},"mediapipe selfie segmintaion got those assets:"),"\n",(0,a.kt)("em",{parentName:"p"},"selfie_segmentation_landscape.tflite"),"\n",(0,a.kt)("em",{parentName:"p"},"selfie_segmentation_solution_simd_wasm_bin.js"),"\n",(0,a.kt)("em",{parentName:"p"},"selfie_segmentation_solution_simd_wasm_bin.wasm"),"\n",(0,a.kt)("em",{parentName:"p"},"selfie_segmentation_solution_wasm_bin.js"),"\n",(0,a.kt)("em",{parentName:"p"},"selfie_segmentation_solution_wasm_bin.wasm"),"\n",(0,a.kt)("em",{parentName:"p"},"selfie_segmentation.binarypb"),"\n",(0,a.kt)("em",{parentName:"p"},"selfie_segmentation.tflite"),"\nPlease keep in mind that the assets list can change between versions.\nAll assets can be taken from ",(0,a.kt)("inlineCode",{parentName:"p"},"node_modules/@mediapipe/selfie_segmentation")),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"MediaProcessorBaseConfig"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/ml-transformers-docs/docs/api/interfaces/BackgroundBlurConfig"},(0,a.kt)("inlineCode",{parentName:"a"},"BackgroundBlurConfig"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/ml-transformers-docs/docs/api/interfaces/VirtualBackgroundConfig"},(0,a.kt)("inlineCode",{parentName:"a"},"VirtualBackgroundConfig"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/ml-transformers-docs/docs/api/interfaces/VideoBackgroundConfig"},(0,a.kt)("inlineCode",{parentName:"a"},"VideoBackgroundConfig"))),(0,a.kt)("p",{parentName:"li"},"\u21b3 ",(0,a.kt)("a",{parentName:"p",href:"/ml-transformers-docs/docs/api/interfaces/SilhouetteBlurConfig"},(0,a.kt)("inlineCode",{parentName:"a"},"SilhouetteBlurConfig"))))),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"transformertype"},"transformerType"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"transformerType"),": ",(0,a.kt)("a",{parentName:"p",href:"/ml-transformers-docs/docs/api/enums/BackgroundTransformerType"},(0,a.kt)("inlineCode",{parentName:"a"},"BackgroundTransformerType"))),(0,a.kt)("p",null,"Type of transformer"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"mediapipebaseassetsuri"},"mediapipeBaseAssetsUri"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"mediapipeBaseAssetsUri"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"A uri path to mediapipe assets."),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"wasmasseturipath"},"wasmAssetUriPath"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"wasmAssetUriPath"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"tfliteasseturipath"},"tfliteAssetUriPath"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"tfliteAssetUriPath"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"renderingoptions"},"renderingOptions"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("strong",{parentName:"p"},"renderingOptions"),": ",(0,a.kt)("a",{parentName:"p",href:"../#renderingoptions"},(0,a.kt)("inlineCode",{parentName:"a"},"RenderingOptions"))))}d.isMDXComponent=!0}}]);